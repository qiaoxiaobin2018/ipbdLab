<?xml version="1.0" encoding="UTF-8"?>
<!-- xmlns="http://www.springframework.org/schema/beans"
声明xml文件默认的命名空间，表示未使用其他命名空间的所有标签的默认命名空间。 -->
<!-- xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
声明XML Schema 实例，声明后就可以使用 schemaLocation 属性了  -->
<!-- xsi:schemaLocation 这个从命名可以看出个大概，指定Schema的位置这个属性必须结合命名空间使用。这个属性有两个值，第一个值表示需要使用的命名空间。第二个值表示供命名空间使用的 XML schema 的位置 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 扫描controller包，应用Spring注解 -->
    <context:component-scan base-package="ipl.sso.controller"/>
    <!--&lt;!&ndash; 重定向视图控制器标签,4.1新增 &ndash;&gt;
    <mvc:redirect-view-controller path="/redirect"
                                  redirect-url="/status" context-relative="true" status-code="301"
                                  keep-query-params="true"/>

    <mvc:default-servlet-handler/>

    &lt;!&ndash; 状态控制器标签 &ndash;&gt;
    <mvc:status-controller path="/status" status-code="200"/>

    &lt;!&ndash; 带状态的视图控制器标签 &ndash;&gt;
    <mvc:view-controller path="/error/**" status-code="200"/>

    &lt;!&ndash; 配置静态资源，让mvc知道静态资源所处的位置，直接映射到对应的文件夹，DispatcherServlet不会处理 &ndash;&gt;
    <mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
    <mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
    <mvc:resources location="/WEB-INF/images/" mapping="/images/**"/>-->

    <!--    &lt;!&ndash;  kisso 注入初始化，也支持使用 web.xml 初始化 &ndash;&gt;
        <bean id="initKisso" class="ipl.sso.WebKissoConfigurer" init-method="initKisso">
            <property name="ssoConfig" ref="ssoConfig"/>
        </bean>
        <bean id="ssoConfig" class="com.baomidou.kisso.SSOConfig">
            <property name="cookieName" value="kisso"/>
        </bean>-->
    <!--
        <mvc:interceptors>
            &lt;!&ndash; SSO 拦截器 &ndash;&gt;
            &lt;!&ndash; path 对所有的请求拦截使用/**，对某个模块下的请求拦截使用：/myPath/* &ndash;&gt;
            <mvc:interceptor>
                <mvc:mapping path="/**"/>
                <bean class="com.baomidou.kisso.web.interceptor.SSOSpringInterceptor"/>
            </mvc:interceptor>
            &lt;!&ndash; SSO 系统权限拦截器 &ndash;&gt;
            &lt;!&ndash;<mvc:interceptor>&ndash;&gt;
            &lt;!&ndash;<mvc:mapping path="/test/permission/**"/>&ndash;&gt;
            &lt;!&ndash;<bean class="com.baomidou.kisso.web.interceptor.SSOPermissionInterceptor">&ndash;&gt;
            &lt;!&ndash;<property name="authorization">&ndash;&gt;
            &lt;!&ndash;<bean class="ipl.sso.controller.permission.SysAuthorization"/>&ndash;&gt;
            &lt;!&ndash;</property>&ndash;&gt;
            &lt;!&ndash;<property name="illegalUrl" value="/test/permission/illegalAccess.html"/>&ndash;&gt;
            &lt;!&ndash;</bean>&ndash;&gt;
            &lt;!&ndash;</mvc:interceptor>&ndash;&gt;-->
    <mvc:annotation-driven/>
</beans>